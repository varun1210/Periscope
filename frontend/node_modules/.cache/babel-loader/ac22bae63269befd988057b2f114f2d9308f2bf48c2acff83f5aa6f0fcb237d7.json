{"ast":null,"code":"var _jsxFileName = \"/Users/varunmuppalla/Documents/projects/react-learn/material-ui-version/src/pages/ats-scan-page/components/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Input from '@material-ui/material/Input';\nimport Button from '@material-ui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUploadButton() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = () => {\n    // You can implement your file upload logic here\n    if (selectedFile) {\n      console.log('Selected file:', selectedFile);\n      // Perform the file upload here\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"file\",\n      onChange: handleFileChange,\n      inputProps: {\n        accept: 'image/*'\n      } // Specify accepted file types\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUploadButton, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = FileUploadButton;\nexport default FileUploadButton;\nvar _c;\n$RefreshReg$(_c, \"FileUploadButton\");","map":{"version":3,"names":["React","useState","Input","Button","jsxDEV","_jsxDEV","FileUploadButton","_s","selectedFile","setSelectedFile","handleFileChange","event","target","files","handleUpload","console","log","children","type","onChange","inputProps","accept","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","onClick","_c","$RefreshReg$"],"sources":["/Users/varunmuppalla/Documents/projects/react-learn/material-ui-version/src/pages/ats-scan-page/components/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Input from '@material-ui/material/Input';\nimport Button from '@material-ui/material/Button';\n\nfunction FileUploadButton() {\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleUpload = () => {\n    // You can implement your file upload logic here\n    if (selectedFile) {\n      console.log('Selected file:', selectedFile);\n      // Perform the file upload here\n    }\n  };\n\n  return (\n    <div>\n      <Input\n        type=\"file\"\n        onChange={handleFileChange}\n        inputProps={{ accept: 'image/*' }} // Specify accepted file types\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleUpload}>\n        Upload\n      </Button>\n    </div>\n  );\n}\n\nexport default FileUploadButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,6BAA6B;AAC/C,OAAOC,MAAM,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAClCF,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA,IAAIN,YAAY,EAAE;MAChBO,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAER,YAAY,CAAC;MAC3C;IACF;EACF,CAAC;;EAED,oBACEH,OAAA;IAAAY,QAAA,gBACEZ,OAAA,CAACH,KAAK;MACJgB,IAAI,EAAC,MAAM;MACXC,QAAQ,EAAET,gBAAiB;MAC3BU,UAAU,EAAE;QAAEC,MAAM,EAAE;MAAU,CAAE,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACFpB,OAAA,CAACF,MAAM;MAACuB,OAAO,EAAC,WAAW;MAACC,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEd,YAAa;MAAAG,QAAA,EAAC;IAEnE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAClB,EAAA,CA3BQD,gBAAgB;AAAAuB,EAAA,GAAhBvB,gBAAgB;AA6BzB,eAAeA,gBAAgB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}